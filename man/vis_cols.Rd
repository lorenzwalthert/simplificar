% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/high-level-interface.R
\name{vis_cols}
\alias{vis_cols}
\title{Visualize all columns}
\usage{
vis_cols(data, ..., transformer = vis_1d_distr, sub_dir = NULL,
  called_for_side_effects = NULL, k_dimensional = NULL)
}
\arguments{
\item{data}{The data to use for plotting.}

\item{...}{Variables to select. You can use tidy selectors such as
\code{starts_with(...)}, see \code{\link[tidyselect:select_helpers]{tidyselect::select_helpers()}} for details.}

\item{transformer}{A transformation function that defines the concrete
visualization.}

\item{sub_dir}{The name of the sub-directory under ./simplificar used to
save the data under, if you select a transformer with side effects. If
set to \code{NULL} (the default), the name of the argument \code{data} is taken.}

\item{called_for_side_effects}{Whether or not the function is called for it's
side effects. If \code{NULL} (the default), this is inferred from \code{transformer}.
If \code{transformer} ends with "file", it is assumed that the function is
called \emph{only} for its side effects and no output to the console is
returned.}

\item{k_dimensional}{The number of dimensions of the plot. If \code{NULL} (the
default), then it is inferred from \code{transformer} in the following way. This
works if the transformer is named after the convention
\code{[something]_[nd]_[something]} whereas \code{[something]} may not contain an
underscore and \code{n} is the number of dimensions. An example of a
transformer meeting this requirement is \code{\link[=vis_1d_distr]{vis_1d_distr()}}.}
}
\description{
Visualize all columns
}
\examples{
# one aesthetic
vis_cols(mtcars, 2) \%>\%
  flatten_gg()
vis_cols(mtcars, contains("c"), "vs",
  transformer = vis_distr, k_dimensional = 2
) \%>\%
 merge_vis()
# all combinations of multiple aesthetics
mtcars \%>\%
  transform_cols("vs", "as.factor") \%>\%
  vis_cols(vs, hp, cyl, transformer = vis_2d_point) \%>\%
  dplyr::slice(1) \%>\%
  flatten_gg()

dummy_types \%>\%
  vis_cols(num1, fct1, int1, transformer = vis_2d_distr) \%>\%
  merge_vis()
}
